# Global settings
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # SSL/TLS settings based on Mozilla Intermediate configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

# Default settings for all frontend and backend sections
defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# HTTP frontend to handle non-encrypted traffic
frontend shy-frontend-http
    bind *:80
    mode http
    http-request set-header X-Forwarded-Proto http
    default_backend shy-backend

# HTTPS frontend to handle encrypted traffic
frontend shy-frontend-https
    bind *:443 ssl crt /etc/letsencrypt/live/www.realshy.tech/fullchain.pem /etc/letsencrypt/live/www.realshy.tech/privkey.pem
    http-request set-header X-Forwarded-Proto https
    default_backend shy-backend

# Backend for handling requests from both HTTP and HTTPS frontends
backend shy-backend
    balance roundrobin
    # Redirect HTTP to HTTPS for any incoming request that is not already using HTTPS
    redirect scheme https code 301 if !{ ssl_fc }
    server 186928-web-01 52.3.249.1 check
    server 186928-web-02 100.25.132.247 check
